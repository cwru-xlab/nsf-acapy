#!/bin/bash
# Builds and runs the agent with Docker. Takes 1 argument specifying which agent to run.

USER_AGENT_ID="user"
SERVICE_PROVIDER_AGENT_ID="service-provider"
INVALID_AGENT_ID_ERROR_DESC="Pass the name of the agent you want to run. (Either \"$USER_AGENT_ID\" or
  \"$SERVICE_PROVIDER_AGENT_ID\")."

# Parse the arg for which agent we want to run:
AGENT_ID=$1
if [ "$AGENT_ID" = "$USER_AGENT_ID" ]; then
  AGENT_PORT_RANGE=8030-8031
elif [ "$AGENT_ID" = "$SERVICE_PROVIDER_AGENT_ID" ]; then
  AGENT_PORT_RANGE=8020-8021
elif [ -z "$AGENT_ID" ]; then
  echo "ARGUMENT REQUIRED: $INVALID_AGENT_ID_ERROR_DESC"
  exit 1
else
  echo "INVALID ARGUMENT: $INVALID_AGENT_ID_ERROR_DESC"
  exit 1
fi


echo "Building docker image..."
# Build the docker image and exit if it fails:
# The same docker image is used for all agents.
docker build -q -t nsf-demo-agent -f ./nsf-demo.Dockerfile .. || exit 1

echo "Built. Running agent docker image with ${AGENT_ID} agent args..."

# (Use double slash for root directory since otherwise weird path conversion stuff happened on my Windows local):
ACAPY_ARG_FILE="//${AGENT_ID}-agent-args.yaml"
# Run docker with args for removing container on exit, interactive mode, port publishing:
# Starts agent with arg file respective to the chosen agent.
docker run --rm -it -p 0.0.0.0:$AGENT_PORT_RANGE:$AGENT_PORT_RANGE nsf-demo-agent start --arg-file "$ACAPY_ARG_FILE"

# Note that I copied agent arg files in the Dockerfile rather than passing the args via script here - the reason for
# this is so that I can manually run the agent executable on my local without docker and still pass the exact same
# args via the arg-file.
